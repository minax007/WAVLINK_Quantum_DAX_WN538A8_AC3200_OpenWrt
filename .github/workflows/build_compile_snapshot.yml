name: WAVLINK Quantum DAX OpenWrt compilation

on:
 # schedule:
 #   - cron: "0 2 * * *"
  push:
    branches:
      - master
  workflow_dispatch:

env:
  REPO_URL: https://github.com/openwrt/openwrt
  REPO_BRANCH: master
  FEEDS_CONF_FILE: openwrt/feeds.conf.default
  CONFIG_FILE: openwrt/.config
  FEEDS: openwrt/feeds.sh
  UPLOAD_BIN_DIR: false
  UPLOAD_FIRMWARE: true
  UPLOAD_RELEASE: true
  TIME_ZONE: Europe/Berlin
  COMPILE_DEPENDS: ack antlr3 asciidoc autoconf automake autopoint binutils bison build-essential 
                   bzip2 ccache cmake cpio curl device-tree-compiler fastjar flex gawk gettext gcc-multilib g++-multilib 
                   git gperf haveged help2man intltool libc6-dev-i386 libelf-dev libfuse-dev libglib2.0-dev libgmp3-dev 
                   libltdl-dev libmpc-dev libmpfr-dev libncurses5-dev libncursesw5-dev libpython3-dev libreadline-dev 
                   libssl-dev libtool lrzsz mkisofs msmtp ninja-build p7zip p7zip-full patch pkgconf python2.7 python3 
                   python3-pyelftools python3-setuptools qemu-utils rsync scons squashfs-tools subversion swig texinfo 
                   uglifyjs upx-ucl unzip vim wget xmlto xxd zlib1g-dev
jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
    - name: Check out workspace
      uses: actions/checkout@main

    - name: Initialize the compilation environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo -E apt -qq update
        sudo -E apt -qq full-upgrade -y
        sudo -E apt -qq install -y $COMPILE_DEPENDS
        sudo -E apt -qq autoremove --purge
        sudo -E apt -qq clean
        sudo timedatectl set-timezone "$TIME_ZONE"
        sudo mkdir -p /workdir
        sudo chown $USER:$GROUPS /workdir

    - name: Pull source code
      working-directory: /workdir
      run: |
        df -hT $PWD
        git clone -b $REPO_BRANCH --single-branch $REPO_URL openwrt
        ln -sf /workdir/openwrt $GITHUB_WORKSPACE/openwrt

    - name: Try to get cache
      uses: stupidloud/cachewrtbuild@main
      with:
        ccache: 'true'
        mixkey: 'bcm53'
        prefix: ${{ github.workspace }}/openwrt

    - name: Load custom feeds files
      run: |
        [ -e $FEEDS_CONF_FILE ] && mv $FEEDS_CONF_FILE openwrt/feeds.conf.default
        chmod +x $FEEDS
        cd openwrt
        $GITHUB_WORKSPACE/$FEEDS

    - name: Update description content in feeds
      run: cd openwrt && ./scripts/feeds update -a

    - name: Install the content described in feeds
      run: cd openwrt && ./scripts/feeds install -a

    - name: Load custom compilation configuration file
      run: |
        [ -e files ] && mv files openwrt/files
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config
        cd openwrt

    - name: Download the dependency files required for compilation
      id: package
      run: |
        cd openwrt
        make defconfig
        make download -j8
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;

    - name: Compile firmware
      id: compile
      run: |
        cd openwrt
        echo -e "$(nproc) thread compile"
        make -j$(nproc) || make -j1 || make -j1 V=s
        echo "STATUS=success" >> "$GITHUB_OUTPUT"
        grep '^CONFIG_TARGET.*DEVICE.*=y' .config | sed -r 's/.*DEVICE_(.*)=y/\1/' > DEVICE_NAME
        [ -s DEVICE_NAME ] && echo "DEVICE_NAME=_$(cat DEVICE_NAME)" >> $GITHUB_ENV
        echo "FILE_DATE=_$(date +"%Y%m%d%H%M")" >> $GITHUB_ENV

    - name: Check space usage
      if: (!cancelled())
      run: df -hT

    - name: Upload bin directory
      uses: actions/upload-artifact@main
      if: steps.compile.outputs.STATUS == 'success' && env.UPLOAD_BIN_DIR == 'true'
      with:
        name: OpenWrt_bin${{ env.DEVICE_NAME }}${{ env.FILE_DATE }}
        path: openwrt/bin

    - name: Organize files
      id: organize
      if: env.UPLOAD_FIRMWARE == 'true' && !cancelled()
      run: |
        cd openwrt/bin/targets/*/*
        rm -rf packages
        echo "FIRMWARE=$PWD" >> $GITHUB_ENV
        echo "STATUS=success" >> "$GITHUB_OUTPUT"

    - name: Upload firmware directory
      uses: actions/upload-artifact@main
      if: steps.organize.outputs.STATUS == 'success' && !cancelled()
      with:
        name: OpenWrt_firmware${{ env.DEVICE_NAME }}${{ env.FILE_DATE }}
        path: ${{ env.FIRMWARE }}

    - name: Generate release ID
      id: tag
      if: env.UPLOAD_RELEASE == 'true' && !cancelled()
      run: |
        echo "release_tag=WAVLINK-Quantum-DAX-OpenWrt-$(date +"%Y.%m.%d-%H%M")" >> "$GITHUB_OUTPUT"
        touch release.txt
        echo "STATUS=success" >> "$GITHUB_OUTPUT"

    - name: Publish the release
      uses: softprops/action-gh-release@v1
      if: steps.tag.outputs.STATUS == 'success' && !cancelled()
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.tag.outputs.release_tag }}
        body_path: release.txt
        files: ${{ env.FIRMWARE }}/*

    - name: Clean up workspace
      uses: GitRML/delete-workflow-runs@main
      with:
        retain_days: 1
        keep_minimum_runs: 3

    - name: Remove old releases
      uses: dev-drprasad/delete-older-releases@v0.3.2
      if: env.UPLOAD_RELEASE == 'true' && !cancelled()
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        keep_latest: 5
        delete_tags: true
